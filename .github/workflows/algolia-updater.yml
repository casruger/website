name: Algolia-Updater

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "update_search_index"
  update_search_index:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Set up python
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 # install the version needed
      # Install pandas
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas
      # Change directory and generate the json index
      - name: execute py script # run the python script to build the index
        run: |
          cd content
          python create-search-index.py
      # Push to Algolia
      - uses: tilburgsciencehub/algolia-uploader@master
        with:
          app_id: 02IYLG4AP9
          # Secret token in the organization's 'Setting > Secrets'
          admin_key: ${{ secrets.ALGOLIA_ADMIN_KEY }}
          # The index name, use 'tilburgsciencehub' to debug
          index_name: Tilburg_Science_Hub
          # relative path to the json index
          index_file_path: ./content/search-index.json
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request event but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v3

      - name: Bash
        run: |
          firstline=$(sed '1q;d' README.md);
          secondline=$(sed '2q;d' README.md);
          firstLineChar=${firstline:0:1};
          secondLineChar=${secondline:0:1};
          echo $firstLineChar;
          echo $secondLineChar;
          if [ "$firstLineChar" == "#" ]; then echo '::set-output name=titleResult::True' ; else echo '::set-output name=titleResult::False' ; fi;
          if [ -n "$secondLineChar" ]; then echo '::set-output name=desResult::True'; else echo '::set-output name=desResult::False'; fi;
          echo
          arr=();
          while IFS= read -r line; do arr+=(${#line}) ; done < README.md;
          echo ${arr[0]};
          if [[ "${arr[0]}" -le 70 && "${arr[0]}" -ge 50 ]]; then echo '::set-output name=titleLenGood::True'; else echo '::set-output name=titleLenGood::False'; fi;
          unset arr[0];
          total=0;
          for i in ${arr[@]}; do
          let total+=$i;
          done;
          if [[ ${total} -le 170 && ${total} -ge 140 ]]; then echo '::set-output name=descLenGood::True'; else echo '::set-output name=desLenGood::False'; fi;
        id: script

      - name: Check if for heading length
        run: |
          if [[ ${{ steps.script.outputs.titleResult }} == True && ${{ steps.script.outputs.titleLenGood }} == False ]] ;
          then exit 1; fi ;

      - name: Check if for description length
        run: |
          if [ ${{ steps.script.outputs.desResult }} == True && ${{ steps.script.outputs.descLenGood }} == False ];
          then exit 1; fi ;

